<body>
  <!-- <p id="timer">00:00:00</p> -->
  <!-- <button id="startTimer" class="text-blue-500">スタート</button> -->
  <!-- <button id="stopTimer" >ストップ</button> -->
  <!-- <button id="resetTimer">リセット</button> -->
  <!-- <button id="onClickPost">登録</button> --> 

<div class="flex h-screen justify-center items-center bg-red-50">
  <div class="p-20 bg-white rounded-2xl shadow-xl text-center">
    <div id ="timer" class="text-6xl font-mono  text-sky-900 mb-4">
      00:00
    </div>
    <div class="flex justify-center space-x-4">
      <button id="startTimer" class="px-6 py-2 border rounded  text-sky-900 border-gray-400 hover:bg-red-100 focus:outline-none font-mono">
        スタート
      </button>
      <button id="stopTimer" class="px-6 py-2 border rounded  text-sky-900 border-gray-400 hover:bg-red-100 focus:outline-none font-mono">
        保存
      </button>
    </div>
  </div>
</div>


  <script>
    const url = "https://jsonplaceholder.typicode.com/posts"
    const getPosts = async () => {
    const res = await fetch(url)
    const data = await res.json()
    await console.log(data)
    } 

    let seconds = 0;
    let minutes = 0;
    let hours = 0;
    let intervalId;

    function toggleTimer() {
      const startButton = document.getElementById("startTimer");
      if (startButton.innerText === "スタート") {
        startTimer();
        startButton.innerText = "ストップ"; // テキストを 'stop に変更
      } else {
       stopTimer();
      startButton.innerText = "スタート"; // テキストを 'start' に戻す
    } 
  }

    function startTimer() {
    intervalId = setInterval(updateTimer, 1000);
    }

    function stopTimer() {
    clearInterval(intervalId);
    }

    function resetTimer() {
    clearInterval(intervalId);
    seconds = 0;
    minutes = 0;
    hours = 0;
    document.getElementById("timer").innerText = "00:00:00";
    }

    function updateTimer() {
    seconds++;
    if (seconds === 60) {
        minutes++;
        seconds = 0;
    }
    if (minutes === 60) {
        hours++;
        minutes = 0;
    }
    const formattedSeconds = seconds.toString().padStart(2, "0");
    const formattedMinutes = minutes.toString().padStart(2, "0");
    const formattedHours = hours.toString().padStart(2, "0");
    document.getElementById("timer").innerText = `${formattedHours}:${formattedMinutes}:${formattedSeconds}`;
    }

    function onClickPost() {
    console.log("call onClickPost");
    const url = "/stopwatches"; // ベースURLは相対パスに変更
    const obj = { hours: hours, minutes: minutes, seconds: seconds };
    console.log(JSON.stringify(obj));
    fetch(url, {
        method: "POST",
        headers: {
        "Content-Type": "application/json",
        },
        body: JSON.stringify(obj)
    })
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error('Error:', error));
    }

    // DOMContentLoaded イベントリスナーを追加
    document.addEventListener('DOMContentLoaded', () => {
  document.getElementById("startTimer").addEventListener("click", toggleTimer);
  // 他のイベントリスナー...
});
    document.addEventListener('DOMContentLoaded', () => {
    // document.getElementById("startTimer").addEventListener("click", startTimer);
    // document.getElementById("stopTimer").addEventListener("click", stopTimer);
    document.getElementById("resetTimer").addEventListener("click", resetTimer);
    document.getElementById("updateTimer").addEventListener("click", updateTimer);
    document.getElementById("onClickPost").addEventListener("click", onClickPost);
});
  </script>
</body>

